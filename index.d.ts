export interface GA4MPConfig {
  /**
   * Sets the userID
   */
  user_id: string;
  /**
   * Sets the clientId, either way it will be autogenerated
   */
  client_id: string;
  /**
   * Session ID
   */
  session_id: string;
  /**
   * Session Number
   */
  session_number: number;
  /**
   * Endpoint URL
   */
  endpoint: string;
  /**
   * Show debug Messages
   */
  debug: boolean;
  /**
   * How often the queue should be dispached (in ms)
   */
  queueDispatchTime: number;
  /**
   * How much events queue to force the queue dispatch
   */
  queueDispatchMaxEvents: number;
  /**
   * Override the User Agent
   */
  user_agent: string;
  /**
   * Override the User Ip Address
   */
  user_ip_address: string;
  /**
   * Disable ads personalization for all hits
   */
  non_personalized_ads: boolean;
}

export interface GA4Track {
  version: string;
  mode: string;
  getHitIndex: () => number;
  /**
   * Grab current Session ID
   */
  getSessionId: () => string;
  /**
   * Grab current ClientId
   */
  getClientId: () => string;
  /**
   * setUserProperty
   */
  setUserProperty: (
    key: string,
    value: string | number | (() => string | number)
  ) => void;
  /**
   * Set an Sticky Event Parameter, it wil be attached to all events
   */
  setEventsParameter: (
    key: string,
    value: string | number | (() => string | number)
  ) => void;
  /**
   * setUserId
   */
  setUserId: (value: string) => void;
  /**
   * Track Event
   */
  trackEvent: (
    eventName: string,
    eventParameters?: Record<string, any>,
    sessionControl?: Record<string, any>,
    forceDispatch?: boolean
  ) => void;
}

export default function ga4mp(
  measurement_ids: string | string[],
  config: Partial<GA4MPConfig>
): GA4Track;
